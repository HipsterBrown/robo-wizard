"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{4852:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var a=r(9231);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),m=n,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return r?a.createElement(f,i(i({ref:t},p),{},{components:r})):a.createElement(f,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},175:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var a=r(8041),n=(r(9231),r(4852));const o={sidebar_position:1},i="Overview",s={unversionedId:"intro",id:"intro",title:"Overview",description:"Robo Wizard is a library and collection of packages for building multi-step workflows backed by a state machine using @xstate/fsm.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,editUrl:"https://github.com/HipsterBrown/robo-wizard/docs/docs/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"RoboWizard",permalink:"/docs/api/classes/robo_wizard.RoboWizard"}},l={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Basics",id:"basics",level:3},{value:"Gathering Values",id:"gathering-values",level:3},{value:"Navigation",id:"navigation",level:3},{value:"Examples",id:"examples",level:2}],p={toc:c};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Robo Wizard is a library and collection of packages for building multi-step workflows backed by a state machine using ",(0,n.kt)("a",{parentName:"p",href:"https://xstate.js.org/docs/packages/xstate-fsm/"},"@xstate/fsm"),"."),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("p",null,"This package is written in TypeScript so type definitions are included by default:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"npm install robo-wizard\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"pnpm install robo-wizard\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"yarn add robo-wizard\n")),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("h3",{id:"basics"},"Basics"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createWizard } from 'robo-wizard';\n\nconst wizard = createWizard(['first', 'second', 'third']);\nwizard.start(updatedWizard => { console.log('Updated!', updatedWizard.currentStep) });\n\nconsole.log(wizard.currentStep); // first\n\nwizard.goToNextStep();\n\nconsole.log(wizard.currentStep); // second\n\nwizard.goToNextStep();\n\nconsole.log(wizard.currentStep); // third\n\nwizard.goToPreviousStep();\n\nconsole.log(wizard.currentStep); // second\n")),(0,n.kt)("h3",{id:"gathering-values"},"Gathering Values"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createWizard } from 'robo-wizard';\n\nconst wizard = createWizard(['first', 'second', 'third'], { firstName: '', lastName: '' });\nwizard.start(updatedWizard => { console.log('Updated!', updatedWizard.currentStep), updatedWizard.currentValues });\n\nconsole.log(wizard.currentValues); // { firstName: '', lastName: '' }\n\nwizard.goToNextStep({ values: { firstName: 'Jane' } });\n\nconsole.log(wizard.currentValues); // { firstName: 'Jane', lastName: '' }\n\nwizard.goToNextStep({ values: { lastName: 'Doe' } });\n\nconsole.log(wizard.currentValues); // { firstName: 'Jane', lastName: 'Doe' }\n\nwizard.goToPreviousStep({ values: { firstName: '', lastName: '' } });\n\nconsole.log(wizard.currentValues); // { firstName: '', lastName: '' }\n")),(0,n.kt)("h3",{id:"navigation"},"Navigation"),(0,n.kt)("p",null,"In order to act as a good web citizen, robo-wizard provides a way to integrate with client-side routing APIs for steps that map to real URL paths."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createWizard } from 'robo-wizard';\n\nconst wizard = createWizard(\n  ['first', 'second', 'third'],\n  { firstName: '', lastName: '' }\n  {\n    navigate: () => history.pushState({}, '', `/${wizard.currentStep}`)\n  }\n);\n\nwindow.addEventListener('popstate', () => {\n  const stepFromPath = window.location.pathname.split('/').pop();\n  if (stepFromPath && stepFromPath !== wizard.currentStep) wizard.sync({ step: stepFromPath })\n})\n\nwizard.start(updatedWizard => { console.log('Updated!', updatedWizard.currentStep), updatedWizard.currentValues });\n\nconsole.log(wizard.currentValues); // { firstName: '', lastName: '' }\n\nwizard.goToNextStep({ values: { firstName: 'Jane' } });\n\nconsole.log(wizard.currentValues); // { firstName: 'Jane', lastName: '' }\n\nwizard.goToNextStep({ values: { lastName: 'Doe' } });\n\nconsole.log(wizard.currentValues); // { firstName: 'Jane', lastName: 'Doe' }\n\nwizard.goToPreviousStep({ values: { firstName: '', lastName: '' } });\n\nconsole.log(wizard.currentValues); // { firstName: '', lastName: '' }\n")),(0,n.kt)("p",null,"While the above example demonstrates using the ",(0,n.kt)("a",{parentName:"p",href:"http://developer.mozilla.org/en-US/docs/Web/API/History_API"},"History API"),", see the examples directory for how the ",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/history"},(0,n.kt)("inlineCode",{parentName:"a"},"history"))," and ",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/react-router"},(0,n.kt)("inlineCode",{parentName:"a"},"react-router"))," packages can be integrated."),(0,n.kt)("h2",{id:"examples"},"Examples"),(0,n.kt)("p",null,"Check out the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/HipsterBrown/robo-wizard/tree/main/examples"},"examples")," directory to see a sample of usage with HTML and a few framework integrations."))}d.isMDXComponent=!0}}]);