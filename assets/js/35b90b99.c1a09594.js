"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[229],{4852:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return k}});var a=n(9231);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),u=p(n),k=r,c=u["".concat(o,".").concat(k)]||u[k]||m[k]||i;return n?a.createElement(c,l(l({ref:t},s),{},{components:n})):a.createElement(c,l({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6723:function(e,t,n){n.r(t),n.d(t,{assets:function(){return o},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return p}});var a=n(8041),r=(n(9231),n(4852));const i={id:"robo_wizard_react",title:"Module: @robo-wizard/react",sidebar_label:"@robo-wizard/react",sidebar_position:0,custom_edit_url:null},l=void 0,d={unversionedId:"api/modules/robo_wizard_react",id:"api/modules/robo_wizard_react",title:"Module: @robo-wizard/react",description:"Type aliases",source:"@site/docs/api/modules/robo_wizard_react.md",sourceDirName:"api/modules",slug:"/api/modules/robo_wizard_react",permalink:"/docs/api/modules/robo_wizard_react",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"robo_wizard_react",title:"Module: @robo-wizard/react",sidebar_label:"@robo-wizard/react",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"robo-wizard",permalink:"/docs/api/modules/robo_wizard"},next:{title:"@robo-wizard/react-router",permalink:"/docs/api/modules/robo_wizard_react_router"}},o={},p=[{value:"Type aliases",id:"type-aliases",level:2},{value:"WizardProviderProps",id:"wizardproviderprops",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Variables",id:"variables",level:2},{value:"WizardContext",id:"wizardcontext",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"Functions",id:"functions",level:2},{value:"Step",id:"step",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"Wizard",id:"wizard",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"createStepsFromChildren",id:"createstepsfromchildren",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"useWizard",id:"usewizard",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"useWizardContext",id:"usewizardcontext",level:3},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-6",level:4}],s={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"type-aliases"},"Type aliases"),(0,r.kt)("h3",{id:"wizardproviderprops"},"WizardProviderProps"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"WizardProviderProps"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Values"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"PropsWithChildren"),"<{ ",(0,r.kt)("inlineCode",{parentName:"p"},"initialValues?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Values"),"  }",">"),(0,r.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Values")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"unknown"),">")))),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/HipsterBrown/robo-wizard/blob/c3d4b30/packages/react/src/contexts/index.tsx#L41"},"react/src/contexts/index.tsx:41")),(0,r.kt)("h2",{id:"variables"},"Variables"),(0,r.kt)("h3",{id:"wizardcontext"},"WizardContext"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"WizardContext"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"RoboWizard"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"object"),">",">"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"internal"))),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/HipsterBrown/robo-wizard/blob/c3d4b30/packages/react/src/contexts/index.tsx#L39"},"react/src/contexts/index.tsx:39")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"step"},"Step"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"Step"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"_props"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"React.ReactElement")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"null")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"_props")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"StepConfig"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"object"),">"," & { ",(0,r.kt)("inlineCode",{parentName:"td"},"element"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"ReactNode"),"  }")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"React.ReactElement")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"null")),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/HipsterBrown/robo-wizard/blob/c3d4b30/packages/react/src/contexts/index.tsx#L8"},"react/src/contexts/index.tsx:8")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"wizard"},"Wizard"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"Wizard"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Values"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"props"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Element")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"example"))," Set up the Wizard with Step components"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'function App() {\n  return (\n    <Wizard<Values> initialValues={{ firstName: \'\', lastName: \'\' }}>\n      <Step name="first" element={<First />} />\n      <Step name="second" element={<Second />} />\n      <Step name="third" element={<Third />} />\n    </Wizard>\n  )\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"example"))," An example step component"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'const First = () => {\n  const wizard = useWizardContext<Values>();\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const values = Object.fromEntries(new FormData(event.currentTarget))\n    wizard.goToNextStep({ values })\n  }\n\n  return (\n    <>\n      <p>{wizard.currentStep} step</p>\n      <form onSubmit={onSubmit}>\n        <div>\n          <label htmlFor="firstName" id="firstName-label">\n            First Name:\n          </label>\n          <input\n            type="text"\n            name="firstName"\n            id="firstName"\n            aria-labelledby="firstName-label"\n            defaultValue={wizard.currentValues.firstName}\n            autoFocus={true}\n          />\n        </div>\n        <div>\n          <button type="button" onClick={() => wizard.goToPreviousStep()} role="link">Previous</button>\n          <button type="submit">Next</button>\n        </div>\n      </form>\n    </>\n  )\n}\n')),(0,r.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Values")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"unknown"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional object to describe values being gathered by the wizard")))),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"props")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules/robo_wizard_react#wizardproviderprops"},(0,r.kt)("inlineCode",{parentName:"a"},"WizardProviderProps")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Values"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Create a wizard experience")))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Element")),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/HipsterBrown/robo-wizard/blob/c3d4b30/packages/react/src/contexts/index.tsx#L104"},"react/src/contexts/index.tsx:104")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createstepsfromchildren"},"createStepsFromChildren"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"createStepsFromChildren"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"steps"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"StepConfig")," & { ",(0,r.kt)("inlineCode",{parentName:"p"},"element"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"ReactNode"),"  }[]"),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"steps")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ReactNode")),(0,r.kt)("td",{parentName:"tr",align:"left"},"= The Children opaque object passed to components, only Step components will be processed")))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"StepConfig")," & { ",(0,r.kt)("inlineCode",{parentName:"p"},"element"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"ReactNode"),"  }[]"),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/HipsterBrown/robo-wizard/blob/c3d4b30/packages/react/src/contexts/index.tsx#L15"},"react/src/contexts/index.tsx:15")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usewizard"},"useWizard"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"useWizard"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Values"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"steps"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"initialValues?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"actions?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"RoboWizard"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Values"),">"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"example"))," Basic usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'\n const App: React.FC = () => {\n   const wizard = useWizard<Values>([\'first\', \'second\', \'third\']);\n\n   const onSubmit: React.FormEventHandler<HTMLFormElement> = event => {\n     event.preventDefault();\n     const values = Object.fromEntries(new FormData(event.currentTarget))\n     wizard.goToNextStep({ values });\n   };\n\n   return (\n     <div>\n       <p>{wizard.currentStep} step</p>\n       <form onSubmit={onSubmit}>\n         {wizard.currentStep === \'first\' && (\n           <div>\n             <label\n               htmlFor="firstName"\n               id="firstName-label"\n             >\n               First Name:\n             </label>\n             <input\n               type="text"\n               name="firstName"\n               id="firstName"\n               aria-label="firstName-label"\n               defaultValue={wizard.currentValues.firstName}\n             />\n           </div>\n         )}\n\n         {wizard.currentStep === \'second\' && (\n           <div>\n             <label\n               htmlFor="lastName"\n               id="lastName-label"\n             >\n               Last Name:\n             </label>\n             <input\n               type="text"\n               name="lastName"\n               id="lastName"\n               aria-label="lastName-label"\n               defaultValue={wizard.currentValues.lastName}\n             />\n           </div>\n         )}\n\n         {wizard.currentStep === \'third\' && (\n           <div>\n             <p>\n               Welcome {wizard.currentValues.firstName}{\' \'}\n               {wizard.currentValues.lastName}!\n             </p>\n           </div>\n         )}\n\n         <div>\n           <button\n             type="button"\n             role="link"\n             onClick={() => wizard.goToPreviousStep()}\n           >\n             Previous\n           </button>\n           <button type="submit">\n             Next\n           </button>\n         </div>\n       </form>\n     </div>\n   );\n };\n')),(0,r.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Values")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"object")," = ",(0,r.kt)("inlineCode",{parentName:"td"},"object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Generic type for object of values being gathered through the wizard steps")))),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"steps")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FlowStep"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Values"),">","[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Configuration of steps for the wizard, see ",(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules/robo_wizard#flowstep"},"FlowStep"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"initialValues")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Values")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional object with intial values to use when starting the wizard")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"actions")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," { ",(0,r.kt)("inlineCode",{parentName:"td"},"navigate?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"ActionFunction"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"object"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"WizardEvent"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"object"),">",">","  }"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional object with navigate field with a function to be called when entering a step")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RoboWizard"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Values"),">"),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/HipsterBrown/robo-wizard/blob/c3d4b30/packages/react/src/hooks/use-wizard.ts#L89"},"react/src/hooks/use-wizard.ts:89")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usewizardcontext"},"useWizardContext"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"useWizardContext"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Values"),">","(): ",(0,r.kt)("inlineCode",{parentName:"p"},"RoboWizard"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Values"),">"),(0,r.kt)("h4",{id:"type-parameters-3"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Values")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"object describing the ",(0,r.kt)("a",{parentName:"td",href:"/docs/api/classes/robo_wizard.RoboWizard#currentvalues"},"currentValues")," gathered by ",(0,r.kt)("a",{parentName:"td",href:"/docs/api/classes/robo_wizard.RoboWizard"},"RoboWizard"),"  Access the ",(0,r.kt)("a",{parentName:"td",href:"/docs/api/classes/robo_wizard.RoboWizard"},"RoboWizard")," from the ",(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules/robo_wizard_react#wizard"},"Wizard")," Context Provider")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RoboWizard"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Values"),">"),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/HipsterBrown/robo-wizard/blob/c3d4b30/packages/react/src/contexts/index.tsx#L121"},"react/src/contexts/index.tsx:121")))}m.isMDXComponent=!0}}]);