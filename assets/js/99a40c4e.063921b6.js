"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[205],{4852:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return c}});var a=r(9231);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),d=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=d(r),c=n,k=m["".concat(p,".").concat(c)]||m[c]||u[c]||i;return r?a.createElement(k,o(o({ref:t},s),{},{components:r})):a.createElement(k,o({ref:t},s))}));function c(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var d=2;d<i;d++)o[d]=r[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2511:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return u}});var a=r(2208),n=r(9161),i=(r(9231),r(4852)),o=["components"],l={id:"robo_wizard_react_router",title:"Module: @robo-wizard/react-router",sidebar_label:"@robo-wizard/react-router",sidebar_position:0,custom_edit_url:null},p=void 0,d={unversionedId:"api/modules/robo_wizard_react_router",id:"api/modules/robo_wizard_react_router",title:"Module: @robo-wizard/react-router",description:"Type aliases",source:"@site/docs/api/modules/robo_wizard_react_router.md",sourceDirName:"api/modules",slug:"/api/modules/robo_wizard_react_router",permalink:"/docs/api/modules/robo_wizard_react_router",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"robo_wizard_react_router",title:"Module: @robo-wizard/react-router",sidebar_label:"@robo-wizard/react-router",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"@robo-wizard/react",permalink:"/docs/api/modules/robo_wizard_react"},next:{title:"RoboWizard",permalink:"/docs/api/classes/robo_wizard.RoboWizard"}},s={},u=[{value:"Type aliases",id:"type-aliases",level:2},{value:"WizardProviderProps",id:"wizardproviderprops",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Functions",id:"functions",level:2},{value:"Step",id:"step",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"Wizard",id:"wizard",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"useWizardContext",id:"usewizardcontext",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-3",level:4}],m={toc:u};function c(e){var t=e.components,r=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"type-aliases"},"Type aliases"),(0,i.kt)("h3",{id:"wizardproviderprops"},"WizardProviderProps"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"WizardProviderProps"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Values"),">",": ",(0,i.kt)("inlineCode",{parentName:"p"},"PropsWithChildren"),"<{ ",(0,i.kt)("inlineCode",{parentName:"p"},"initialValues?"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Values"),"  }",">"),(0,i.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Values")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object"))))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/HipsterBrown/robo-wizard/blob/d5ef05e/packages/react-router/src/context/index.tsx#L9"},"react-router/src/context/index.tsx:9")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"step"},"Step"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"Step"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"props"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Element")),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"props")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RouteProps")," & ",(0,i.kt)("inlineCode",{parentName:"td"},"StepConfig"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"object"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"accept same props as the ",(0,i.kt)("a",{parentName:"td",href:"https://reactrouter.com/docs/en/v6/api#routes-and-route"},"Route component from react-router"),", excepte for ",(0,i.kt)("inlineCode",{parentName:"td"},"path"),", as well as ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/modules/robo_wizard#stepconfig"},"StepConfig")," from ",(0,i.kt)("inlineCode",{parentName:"td"},"robo-wizard"))))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Element")),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/HipsterBrown/robo-wizard/blob/d5ef05e/packages/react-router/src/components/Step.tsx#L7"},"react-router/src/components/Step.tsx:7")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"wizard"},"Wizard"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"Wizard"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Values"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"props"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Element")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," Set up the Wizard under a BrowserRouter"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'function App() {\n  return (\n    <BrowserRouter>\n      <Wizard<Values> initialValues={{ firstName: \'\', lastName: \'\' }}>\n        <Step name="first" element={<First />} />\n        <Step name="second" element={<Second />} />\n        <Step name="third" element={<Third />} />\n      </Wizard>\n    </BrowserRouter>\n  )\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," An example step component"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'const First = () => {\n  const wizard = useWizardContext<Values>();\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const values = Object.fromEntries(new FormData(event.currentTarget))\n    wizard.goToNextStep({ values })\n  }\n\n  return (\n    <>\n      <p>{wizard.currentStep} step</p>\n      <form onSubmit={onSubmit}>\n        <div>\n          <label htmlFor="firstName" id="firstName-label">\n            First Name:\n          </label>\n          <input\n            type="text"\n            name="firstName"\n            id="firstName"\n            aria-labelledby="firstName-label"\n            defaultValue={wizard.currentValues.firstName}\n            autoFocus={true}\n          />\n        </div>\n        <div>\n          <button type="button" onClick={() => wizard.goToPreviousStep()} role="link">Previous</button>\n          <button type="submit">Next</button>\n        </div>\n      </form>\n    </>\n  )\n}\n')),(0,i.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Values")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")," = ",(0,i.kt)("inlineCode",{parentName:"td"},"object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Optional object to describe values being gathered by the wizard")))),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"props")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/modules/robo_wizard_react_router#wizardproviderprops"},(0,i.kt)("inlineCode",{parentName:"a"},"WizardProviderProps")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Values"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Create a routed wizard experience under a Router from ",(0,i.kt)("a",{parentName:"td",href:"https://reactrouter.com"},"react-router"))))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Element")),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/HipsterBrown/robo-wizard/blob/d5ef05e/packages/react-router/src/context/index.tsx#L78"},"react-router/src/context/index.tsx:78")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"usewizardcontext"},"useWizardContext"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"useWizardContext"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Values"),">","(): ",(0,i.kt)("inlineCode",{parentName:"p"},"RoboWizard"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Values"),">"),(0,i.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Values")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")," = ",(0,i.kt)("inlineCode",{parentName:"td"},"object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"object describing the ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/robo_wizard.RoboWizard#currentvalues"},"currentValues")," gathered by ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/robo_wizard.RoboWizard"},"RoboWizard"),"  Access the ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/robo_wizard.RoboWizard"},"RoboWizard")," from the ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/modules/robo_wizard_react_router#wizard"},"Wizard")," Context Provider")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"RoboWizard"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Values"),">"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/HipsterBrown/robo-wizard/blob/d5ef05e/packages/react-router/src/context/index.tsx#L120"},"react-router/src/context/index.tsx:120")))}c.isMDXComponent=!0}}]);